# Maintainer: Lorenz Moesenlechner <moesenle@gmail.com>

pkgdesc='The ROS core stack, electric version.'
url='http://www.ros.org/'

pkgname='ros-electric-ros'
pkgver='1.6.8'
arch=('i686' 'x86_64')
pkgrel=1
license=('BSD')
makedepends=('chrpath')
depends=('python2' 'cmake' 'tinyxml' 'libyaml' 'python2-yaml' 'pygtk' 
         'python2-scipy' 'boost' 'bzip2' 'zlib' 'graphviz' 'wxgtk'
         'wxpython' 'gtk2' 'pkg-config' 'qt' 'libstdc++5' 'intltool'
         'unzip' 'fltk' 'bzr' 'git' 'subversion' 'gtest' 'autoconf'
         'automake' 'libtool')


source=("https://code.ros.org/svn/release/download/stacks/ros/ros-$pkgver/ros-$pkgver.tar.bz2"
        'ros.diff'
        'setup.sh'
        'setup.bash'
        'setup.zsh'
        'rosinstall')
md5sums=('cd9d53414c6decda2731ca092733fae7'
         '8539e25d150e120fa3e89fc6ecd414fc'
         'cb3ae83c3dbc749a36a7724eb7e0ed02'
         '2d69eaed23dd4e4642ec1976208b2d76'
         'be76f46468657513e378ceaefb1f82b8'
         'c5730da31515e42b8b597521e59c0bd1')

build() {
  # set up ROS environment
  export ROS_ROOT="${srcdir}/ros-${pkgver}"
  export ROS_PACKAGE_PATH=$ROS_ROOT
  export PATH=${ROS_ROOT}/bin:$PATH
  export PYTHONPATH=$ROS_ROOT/core/roslib/src:$PYTHONPATH

  cd "${srcdir}/ros-${pkgver}"
  patch -p1 -i "$srcdir/ros.diff"
  rosmake --no-rosdep -i --bootstrap ros
  install_ros_stack ${srcdir}/ros-${pkgver} /opt/ros/electric/ros
  cp ${srcdir}/setup.* $pkgdir/$2
  cp ${srcdir}/rosinstall $pkgdir/opt/ros/electric/.rosinstall
}

install_ros_stack() {
  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Usage: install_ros_stack <src-dir> <ros-dir>"
    exit 1
  fi
  
  mkdir -p $pkgdir/$2
  cp -r $1/* $pkgdir/$2
  find $pkgdir/$2 -name manifest.xml -printf '%h/build\n' | xargs rm -rf
  fix_rpaths $1 $2
}

fix_rpaths() {
  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Usage: fix_rpaths <src-dir> <ros-dir>"
    exit 1
  fi

  executables=$(find $pkgdir/$2 -type f -executable)
  for file in $executables; do
    rpath_output=$(chrpath -l $file 2>/dev/null || echo "")
    if [ -n "$rpath_output" ] && echo $rpath_output | grep RPATH; then
      fixed_rpath=$(echo $rpath_output | sed 's/.*RPATH=//g' | sed "s?$1?$2?g")
      chrpath -r $fixed_rpath $file
    fi
  done
}
